#!/usr/bin/env python2.7
from custom_services.srv import updatePDGains
import rospy
from numpy import cos, sin, sqrt
import copy

if __name__ == '__main__':
    rospy.init_node('wheel_reference')
    dt = 0.005
    rate = rospy.Rate(1.0/dt)
    #print(1.0/dt)
    name = '/centauro/wheels_command'
    service_ok = False
    while (not rospy.is_shutdown() and not service_ok):
      try:
        print('wait for service: update_links')
        rospy.wait_for_service(name, 0.5)
        service_ok = True
        print('service found')
      except:
        pass

    rate.sleep()

    ref_service = rospy.ServiceProxy(name, updatePDGains)

    r1, r2, th = 1.0, 0.65, 0.0
#    m_d, m_v, vel = 3.05, 2.75, 0.05
    m_d, m_2d, m_v, vel, d_th = 2.0, 2.75, 2.75, 1.00, 0.5*0.5
    x, y = 0, 0
    
    mode = 0


#    ref_service(1.0, 4.0, dth*100)
    vel_max = 0.1
    
    dx, dy, dth =  0.95*vel_max, sqrt(vel_max*vel_max*(1-0.95*0.95)), 0.05
    
#    mode, dth = 1, -0.25
    while not rospy.is_shutdown():
#      # square
      if mode == 0 and th < 18.3/180.0*3.14:
		th += copy.copy(dth) * dt * 6.0 # ? 
      elif mode == 0:
		dth = 0
		mode += 1
      elif mode == 1  and x > 1.55:
		mode += 1
      elif (mode == 2) and dth > -0.16:
		dth -= 0.002 if dth > -0.16 else 0.0
		th += dth * dt * 6.0 # 0
      elif (mode == 2) and th > -198.3/180.0*3.14:
		th += dth * dt * 1.0 # 0
		dx = -r2*cos(th)*copy.copy(dth)
		dy = -r2*sin(th)*copy.copy(dth)
      elif mode == 2 and dth < 0:
        dth +=  0.002
      elif mode == 2:
        mode += 1
      elif mode == 3 and x < 0.129: # 0?
		mode += 1
		dth =  -0.2
		dx, dy = 0.0, 0.0
      elif mode == 4 and th> -360.0/180.0*3.14: # 360
		th += dth * dt * 2.9 # 0
      elif mode == 4:
		mode += 1
		dth =  0.0
		dx, dy = 0.0, 0.0
        



      x += dx*dt*m_v
      y += dy*dt*m_v
      
      print("mode\t", mode, "vel\t", sqrt(dx*dx+dy*dy), "dx", dx, "dy", dy, "th\t", th, "dth\t", dth, "x", x)

      try:
        ref_service(1.0, 1.0, dx*100.0)
        ref_service(1.0, 2.0, dy*100.0)
        ref_service(1.0, 4.0, dth*100.0)

      except rospy.ServiceException as exc:
        print("Service did not process request: " + str(exc))


      rate.sleep()




