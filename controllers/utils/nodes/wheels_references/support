#!/usr/bin/env python2.7
from custom_services.srv import updatePDGains
import rospy
from numpy import cos, sin
import numpy as np

if __name__ == '__main__':
    rospy.init_node('wheels_support_straight')
    dt = 0.005
    rate = rospy.Rate(1.0/dt)
    #print(1.0/dt)
    name = '/centauro/wheels_command'
    service_ok = False
    
    
    
    while (not rospy.is_shutdown() and not service_ok):
      try:
        print('wait for service: update_links')
        rospy.wait_for_service(name, 0.5)
        service_ok = True
        print('service found')
      except:
        pass

    rate.sleep()

    ref_service = rospy.ServiceProxy(name, updatePDGains)

    x, y = 0, 0
    
    mode = 0

    vel = 0.009 # 0.05
#    ref_service(1.0, 4.0, dth*100)

#    dx =  np.array([ vel,  0.00, 0.00, 0.00])
#    dy =  np.array([0.00,  0.00, 0.00, 0.00])
#    x = np.array([0.00, 0.00, 0.00, 0.00])
#    y = np.array([0.00, 0.00, 0.00, 0.00])
#    dir_x = np.array([-1. , -1.,  1., 1.])
#    dir_y = np.array([-1. ,  1., -1., 1.])

    dx =  np.array([ vel,  0.00, 0.00, 0.00])
    dy =  np.array([0.00,  0.00, 0.00, 0.00])
    x = np.array([0.00,  0.00, 0.00, 0.00])
    y = np.array([0.00,  0.00, 0.00, 0.00])
    dir_x = np.array([-1., -1., 1., 1.])
    dir_y = np.array([-1.,  1., -1., 1.])
    p_x = np.array([0.00,  0.00, 0.00, 0.00])
    wait = 0
    
    while not rospy.is_shutdown():
#      if mode == 0 and x[0] > 0.01 and x[0] < 0.02:
#         dx[1] = vel
#      elif (mode == 0 and x[0] > 0.02):
#         dx[0], dx[1] =  0.00,  vel
#         mode += 1
#      elif mode == 1 and x[1] > 0.01 and x[1] < 0.02:
#         dx[2] = -vel
#      elif (mode == 1 and x[1] > 0.02):
#         dx[1], dx[2] =  0.00,  -vel        
#         mode += 1
#      elif mode == 2 and x[2] < -0.01  and  x[2] > -0.025:
#         dx[3] = -vel
#      elif (mode == 2 and x[2] < -0.025):
#         dx[2], dx[3] =  0.00,  -vel        
#         mode += 1
      if (mode == 0):
         dx =  -vel*dir_x
         mode += 1
      elif  (mode == 1):
         dx = np.array([d if np.fabs(x[i]) < 0.02 else 0 for i, d in enumerate(dx)])
         if(np.sum(np.fabs(np.array(dx))) == 0.0):
           mode += 1
           p_x = np.copy(x)
      elif (mode == 2 and wait < 50):
         wait += 1
      elif (mode == 2):
         dx =  vel*dir_x
         mode += 1
         wait = 0
      elif  (mode == 3):
         dx = np.array([d if np.fabs(x[i] - p_x[i]) < 0.05 else 0 for i, d in enumerate(dx)]) #0.06
         if(np.sum(np.fabs(np.array(dx))) == 0.0):
           mode += 1
      elif (mode == 4 and wait < 50):
         wait += 1
      elif  (mode == 4):
         dy =  -vel*dir_y
         dx =  -0.003*dir_x # -0.005
         mode += 1
      elif mode == 5:
         dy = np.array([d if np.fabs(y[i]) < 0.030 else 0 for i, d in enumerate(dy)]) # 0.045
         dx = np.array([dx[i] if np.fabs(d) > 0.0001 else 0 for i, d in enumerate(dy)]) # 0.045
         if(np.sum(np.fabs(np.array(dy))) == 0.0):
           mode += 1

      x += dx*0.005*2
      y += dy*0.005*2
      
      print("dx\t", dx, "dy\t", dy,  "x\t", x,  "y\t", y)

      try:
        ref_service(7.0, 0.0, dx[0]*1000.0)
        ref_service(7.0, 1.0, dx[1]*1000.0)
        ref_service(7.0, 2.0, dx[2]*1000.0)
        ref_service(7.0, 3.0, dx[3]*1000.0)
        ref_service(8.0, 0.0, dy[0]*1000.0)
        ref_service(8.0, 1.0, dy[1]*1000.0)
        ref_service(8.0, 2.0, dy[2]*1000.0)
        ref_service(8.0, 3.0, dy[3]*1000.0)

      except rospy.ServiceException as exc:
        print("Service did not process request: " + str(exc))


      rate.sleep()




